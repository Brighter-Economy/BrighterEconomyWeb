@page "/PlayerBalances"
@using System.Net.Http.Json
@using System.Collections.Generic
@using System.Text.Json.Serialization
@using BEWebPortal.Pages.Compenents
@inject HttpClient httpClient
@inject IDialogService DialogService

<PageTitle>Player Balances - BE</PageTitle>
<MudMainContent Class="pa-8">
    <MudStack Class="mb-4" Row="true" Justify="Justify.FlexEnd">
        <MudButton
            Variant="Variant.Filled"
            StartIcon="@Icons.Material.Filled.Refresh"
            Color="Color.Primary"
            @onclick="@GetData">Refresh</MudButton>
    </MudStack>
    <MudTable T="Account"
              Items="@Accounts"
              Hover="true"
              Breakpoint="Breakpoint.Sm"
              SortLabel="Sort By"
              OnRowClick="RowClickEvent">
        <HeaderContent>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<Account, object>(x => x.username)">Name</MudTableSortLabel>
            </MudTh>
            <MudTh>UUID</MudTh>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<Account, object>(x => x.money)">Balance</MudTableSortLabel>
            </MudTh>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<Account, object>(x => x.locked)">Locked</MudTableSortLabel>
            </MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Name">@context.username</MudTd>
            <MudTd DataLabel="UUID">@context.uuid</MudTd>
            <MudTd DataLabel="Balance">@context.moneyFormatted</MudTd>
            <MudTd DataLabel="Locked">
                <MudCheckBox Value="@context.locked" ReadOnly="true"/>
            </MudTd>
        </RowTemplate>
    </MudTable>
</MudMainContent>

@code {

    //Handles the Tabling
    //
    const string uri = "http://localhost:25570/accounts";

    private IEnumerable<Account> Accounts = new List<Account>();

    private async Task GetData()
    {
        Accounts = await httpClient.GetFromJsonAsync<List<Account>>(uri);
    }

    protected override async Task OnInitializedAsync()
    {
        await GetData();
    }

    private void RowClickEvent(TableRowClickEventArgs<Account> eventArgs)
    {
        OpenPlayerDialogAsync(eventArgs.Item);
    }
    
    
    private Task OpenPlayerDialogAsync(Account account)
    {
        var parameters = new DialogParameters<PlayerDialog> { { x => x.accountInfo, account } };
        var options = new DialogOptions { CloseOnEscapeKey = true, MaxWidth = MaxWidth.ExtraExtraLarge, FullWidth = true};
        
        return DialogService.ShowAsync<PlayerDialog>("Player Dialog", parameters, options);
    }

}